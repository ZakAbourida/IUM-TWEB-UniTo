/*
 * MongoDBServerDocumentation
 * Documentation of MongoDB Server
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: zakaria.abourida@edu.unito.it
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.time.LocalDate;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Appearances
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-01-16T12:05:23.588206+01:00[Europe/Rome]")
public class Appearances {
  public static final String SERIALIZED_NAME_APPEARANCES_ID = "appearances_id";
  @SerializedName(SERIALIZED_NAME_APPEARANCES_ID)
  private String appearancesId;

  public static final String SERIALIZED_NAME_COMPETITION_ID = "competition_id";
  @SerializedName(SERIALIZED_NAME_COMPETITION_ID)
  private String competitionId;

  public static final String SERIALIZED_NAME_DATE = "date";
  @SerializedName(SERIALIZED_NAME_DATE)
  private LocalDate date;

  public static final String SERIALIZED_NAME_GAME_ID = "game_id";
  @SerializedName(SERIALIZED_NAME_GAME_ID)
  private BigDecimal gameId;

  public static final String SERIALIZED_NAME_GOALS = "goals";
  @SerializedName(SERIALIZED_NAME_GOALS)
  private BigDecimal goals;

  public static final String SERIALIZED_NAME_MINUTES_PLAYED = "minutes_played";
  @SerializedName(SERIALIZED_NAME_MINUTES_PLAYED)
  private BigDecimal minutesPlayed;

  public static final String SERIALIZED_NAME_PLAYER_CLUB_ID = "player_club_id";
  @SerializedName(SERIALIZED_NAME_PLAYER_CLUB_ID)
  private BigDecimal playerClubId;

  public static final String SERIALIZED_NAME_PLAYER_ID = "player_id";
  @SerializedName(SERIALIZED_NAME_PLAYER_ID)
  private BigDecimal playerId;

  public static final String SERIALIZED_NAME_PLAYER_NAME = "player_name";
  @SerializedName(SERIALIZED_NAME_PLAYER_NAME)
  private String playerName;

  public static final String SERIALIZED_NAME_RED_CARDS = "red_cards";
  @SerializedName(SERIALIZED_NAME_RED_CARDS)
  private BigDecimal redCards;

  public static final String SERIALIZED_NAME_YELLOW_CARD = "yellow_card";
  @SerializedName(SERIALIZED_NAME_YELLOW_CARD)
  private String yellowCard;

  public static final String SERIALIZED_NAME_ASSISTS = "assists";
  @SerializedName(SERIALIZED_NAME_ASSISTS)
  private BigDecimal assists;

  public static final String SERIALIZED_NAME_PLAYER_CURRENT_CLUB_ID = "player_current_club_id";
  @SerializedName(SERIALIZED_NAME_PLAYER_CURRENT_CLUB_ID)
  private BigDecimal playerCurrentClubId;

  public Appearances() {
  }

  public Appearances appearancesId(String appearancesId) {
    
    this.appearancesId = appearancesId;
    return this;
  }

   /**
   * Get appearancesId
   * @return appearancesId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAppearancesId() {
    return appearancesId;
  }


  public void setAppearancesId(String appearancesId) {
    this.appearancesId = appearancesId;
  }


  public Appearances competitionId(String competitionId) {
    
    this.competitionId = competitionId;
    return this;
  }

   /**
   * Get competitionId
   * @return competitionId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCompetitionId() {
    return competitionId;
  }


  public void setCompetitionId(String competitionId) {
    this.competitionId = competitionId;
  }


  public Appearances date(LocalDate date) {
    
    this.date = date;
    return this;
  }

   /**
   * Get date
   * @return date
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public LocalDate getDate() {
    return date;
  }


  public void setDate(LocalDate date) {
    this.date = date;
  }


  public Appearances gameId(BigDecimal gameId) {
    
    this.gameId = gameId;
    return this;
  }

   /**
   * Get gameId
   * @return gameId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigDecimal getGameId() {
    return gameId;
  }


  public void setGameId(BigDecimal gameId) {
    this.gameId = gameId;
  }


  public Appearances goals(BigDecimal goals) {
    
    this.goals = goals;
    return this;
  }

   /**
   * Get goals
   * @return goals
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigDecimal getGoals() {
    return goals;
  }


  public void setGoals(BigDecimal goals) {
    this.goals = goals;
  }


  public Appearances minutesPlayed(BigDecimal minutesPlayed) {
    
    this.minutesPlayed = minutesPlayed;
    return this;
  }

   /**
   * Get minutesPlayed
   * @return minutesPlayed
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigDecimal getMinutesPlayed() {
    return minutesPlayed;
  }


  public void setMinutesPlayed(BigDecimal minutesPlayed) {
    this.minutesPlayed = minutesPlayed;
  }


  public Appearances playerClubId(BigDecimal playerClubId) {
    
    this.playerClubId = playerClubId;
    return this;
  }

   /**
   * Get playerClubId
   * @return playerClubId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigDecimal getPlayerClubId() {
    return playerClubId;
  }


  public void setPlayerClubId(BigDecimal playerClubId) {
    this.playerClubId = playerClubId;
  }


  public Appearances playerId(BigDecimal playerId) {
    
    this.playerId = playerId;
    return this;
  }

   /**
   * Get playerId
   * @return playerId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigDecimal getPlayerId() {
    return playerId;
  }


  public void setPlayerId(BigDecimal playerId) {
    this.playerId = playerId;
  }


  public Appearances playerName(String playerName) {
    
    this.playerName = playerName;
    return this;
  }

   /**
   * Get playerName
   * @return playerName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPlayerName() {
    return playerName;
  }


  public void setPlayerName(String playerName) {
    this.playerName = playerName;
  }


  public Appearances redCards(BigDecimal redCards) {
    
    this.redCards = redCards;
    return this;
  }

   /**
   * Get redCards
   * @return redCards
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigDecimal getRedCards() {
    return redCards;
  }


  public void setRedCards(BigDecimal redCards) {
    this.redCards = redCards;
  }


  public Appearances yellowCard(String yellowCard) {
    
    this.yellowCard = yellowCard;
    return this;
  }

   /**
   * Get yellowCard
   * @return yellowCard
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getYellowCard() {
    return yellowCard;
  }


  public void setYellowCard(String yellowCard) {
    this.yellowCard = yellowCard;
  }


  public Appearances assists(BigDecimal assists) {
    
    this.assists = assists;
    return this;
  }

   /**
   * Get assists
   * @return assists
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigDecimal getAssists() {
    return assists;
  }


  public void setAssists(BigDecimal assists) {
    this.assists = assists;
  }


  public Appearances playerCurrentClubId(BigDecimal playerCurrentClubId) {
    
    this.playerCurrentClubId = playerCurrentClubId;
    return this;
  }

   /**
   * Get playerCurrentClubId
   * @return playerCurrentClubId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigDecimal getPlayerCurrentClubId() {
    return playerCurrentClubId;
  }


  public void setPlayerCurrentClubId(BigDecimal playerCurrentClubId) {
    this.playerCurrentClubId = playerCurrentClubId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Appearances appearances = (Appearances) o;
    return Objects.equals(this.appearancesId, appearances.appearancesId) &&
        Objects.equals(this.competitionId, appearances.competitionId) &&
        Objects.equals(this.date, appearances.date) &&
        Objects.equals(this.gameId, appearances.gameId) &&
        Objects.equals(this.goals, appearances.goals) &&
        Objects.equals(this.minutesPlayed, appearances.minutesPlayed) &&
        Objects.equals(this.playerClubId, appearances.playerClubId) &&
        Objects.equals(this.playerId, appearances.playerId) &&
        Objects.equals(this.playerName, appearances.playerName) &&
        Objects.equals(this.redCards, appearances.redCards) &&
        Objects.equals(this.yellowCard, appearances.yellowCard) &&
        Objects.equals(this.assists, appearances.assists) &&
        Objects.equals(this.playerCurrentClubId, appearances.playerCurrentClubId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(appearancesId, competitionId, date, gameId, goals, minutesPlayed, playerClubId, playerId, playerName, redCards, yellowCard, assists, playerCurrentClubId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Appearances {\n");
    sb.append("    appearancesId: ").append(toIndentedString(appearancesId)).append("\n");
    sb.append("    competitionId: ").append(toIndentedString(competitionId)).append("\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    gameId: ").append(toIndentedString(gameId)).append("\n");
    sb.append("    goals: ").append(toIndentedString(goals)).append("\n");
    sb.append("    minutesPlayed: ").append(toIndentedString(minutesPlayed)).append("\n");
    sb.append("    playerClubId: ").append(toIndentedString(playerClubId)).append("\n");
    sb.append("    playerId: ").append(toIndentedString(playerId)).append("\n");
    sb.append("    playerName: ").append(toIndentedString(playerName)).append("\n");
    sb.append("    redCards: ").append(toIndentedString(redCards)).append("\n");
    sb.append("    yellowCard: ").append(toIndentedString(yellowCard)).append("\n");
    sb.append("    assists: ").append(toIndentedString(assists)).append("\n");
    sb.append("    playerCurrentClubId: ").append(toIndentedString(playerCurrentClubId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("appearances_id");
    openapiFields.add("competition_id");
    openapiFields.add("date");
    openapiFields.add("game_id");
    openapiFields.add("goals");
    openapiFields.add("minutes_played");
    openapiFields.add("player_club_id");
    openapiFields.add("player_id");
    openapiFields.add("player_name");
    openapiFields.add("red_cards");
    openapiFields.add("yellow_card");
    openapiFields.add("assists");
    openapiFields.add("player_current_club_id");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to Appearances
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (Appearances.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in Appearances is not found in the empty JSON string", Appearances.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!Appearances.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Appearances` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if ((jsonObj.get("appearances_id") != null && !jsonObj.get("appearances_id").isJsonNull()) && !jsonObj.get("appearances_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `appearances_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("appearances_id").toString()));
      }
      if ((jsonObj.get("competition_id") != null && !jsonObj.get("competition_id").isJsonNull()) && !jsonObj.get("competition_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `competition_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("competition_id").toString()));
      }
      if ((jsonObj.get("player_name") != null && !jsonObj.get("player_name").isJsonNull()) && !jsonObj.get("player_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `player_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("player_name").toString()));
      }
      if ((jsonObj.get("yellow_card") != null && !jsonObj.get("yellow_card").isJsonNull()) && !jsonObj.get("yellow_card").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `yellow_card` to be a primitive type in the JSON string but got `%s`", jsonObj.get("yellow_card").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Appearances.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Appearances' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Appearances> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Appearances.class));

       return (TypeAdapter<T>) new TypeAdapter<Appearances>() {
           @Override
           public void write(JsonWriter out, Appearances value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Appearances read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of Appearances given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of Appearances
  * @throws IOException if the JSON string is invalid with respect to Appearances
  */
  public static Appearances fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Appearances.class);
  }

 /**
  * Convert an instance of Appearances to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

