/*
 * MongoDBServerDocumentation
 * Documentation of MongoDB Server
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: zakaria.abourida@edu.unito.it
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.time.LocalDate;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GameEvents
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-01-16T12:05:23.588206+01:00[Europe/Rome]")
public class GameEvents {
  public static final String SERIALIZED_NAME_CLUB_ID = "club_id";
  @SerializedName(SERIALIZED_NAME_CLUB_ID)
  private BigDecimal clubId;

  public static final String SERIALIZED_NAME_DATE = "date";
  @SerializedName(SERIALIZED_NAME_DATE)
  private LocalDate date;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_GAME_ID = "game_id";
  @SerializedName(SERIALIZED_NAME_GAME_ID)
  private BigDecimal gameId;

  public static final String SERIALIZED_NAME_MINUTE = "minute";
  @SerializedName(SERIALIZED_NAME_MINUTE)
  private BigDecimal minute;

  public static final String SERIALIZED_NAME_PLAYER_ASSIST_ID = "player_assist_id";
  @SerializedName(SERIALIZED_NAME_PLAYER_ASSIST_ID)
  private BigDecimal playerAssistId;

  public static final String SERIALIZED_NAME_PLAYER_ID = "player_id";
  @SerializedName(SERIALIZED_NAME_PLAYER_ID)
  private BigDecimal playerId;

  public static final String SERIALIZED_NAME_PLAYER_IN_ID = "player_in_id";
  @SerializedName(SERIALIZED_NAME_PLAYER_IN_ID)
  private BigDecimal playerInId;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;

  public static final String SERIALIZED_NAME_GAME_EVENT_ID = "game_event_id";
  @SerializedName(SERIALIZED_NAME_GAME_EVENT_ID)
  private String gameEventId;

  public GameEvents() {
  }

  public GameEvents clubId(BigDecimal clubId) {
    
    this.clubId = clubId;
    return this;
  }

   /**
   * Get clubId
   * @return clubId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigDecimal getClubId() {
    return clubId;
  }


  public void setClubId(BigDecimal clubId) {
    this.clubId = clubId;
  }


  public GameEvents date(LocalDate date) {
    
    this.date = date;
    return this;
  }

   /**
   * Get date
   * @return date
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public LocalDate getDate() {
    return date;
  }


  public void setDate(LocalDate date) {
    this.date = date;
  }


  public GameEvents description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public GameEvents gameId(BigDecimal gameId) {
    
    this.gameId = gameId;
    return this;
  }

   /**
   * Get gameId
   * @return gameId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigDecimal getGameId() {
    return gameId;
  }


  public void setGameId(BigDecimal gameId) {
    this.gameId = gameId;
  }


  public GameEvents minute(BigDecimal minute) {
    
    this.minute = minute;
    return this;
  }

   /**
   * Get minute
   * @return minute
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigDecimal getMinute() {
    return minute;
  }


  public void setMinute(BigDecimal minute) {
    this.minute = minute;
  }


  public GameEvents playerAssistId(BigDecimal playerAssistId) {
    
    this.playerAssistId = playerAssistId;
    return this;
  }

   /**
   * Get playerAssistId
   * @return playerAssistId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigDecimal getPlayerAssistId() {
    return playerAssistId;
  }


  public void setPlayerAssistId(BigDecimal playerAssistId) {
    this.playerAssistId = playerAssistId;
  }


  public GameEvents playerId(BigDecimal playerId) {
    
    this.playerId = playerId;
    return this;
  }

   /**
   * Get playerId
   * @return playerId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigDecimal getPlayerId() {
    return playerId;
  }


  public void setPlayerId(BigDecimal playerId) {
    this.playerId = playerId;
  }


  public GameEvents playerInId(BigDecimal playerInId) {
    
    this.playerInId = playerInId;
    return this;
  }

   /**
   * Get playerInId
   * @return playerInId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigDecimal getPlayerInId() {
    return playerInId;
  }


  public void setPlayerInId(BigDecimal playerInId) {
    this.playerInId = playerInId;
  }


  public GameEvents type(String type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getType() {
    return type;
  }


  public void setType(String type) {
    this.type = type;
  }


  public GameEvents gameEventId(String gameEventId) {
    
    this.gameEventId = gameEventId;
    return this;
  }

   /**
   * Get gameEventId
   * @return gameEventId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getGameEventId() {
    return gameEventId;
  }


  public void setGameEventId(String gameEventId) {
    this.gameEventId = gameEventId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GameEvents gameEvents = (GameEvents) o;
    return Objects.equals(this.clubId, gameEvents.clubId) &&
        Objects.equals(this.date, gameEvents.date) &&
        Objects.equals(this.description, gameEvents.description) &&
        Objects.equals(this.gameId, gameEvents.gameId) &&
        Objects.equals(this.minute, gameEvents.minute) &&
        Objects.equals(this.playerAssistId, gameEvents.playerAssistId) &&
        Objects.equals(this.playerId, gameEvents.playerId) &&
        Objects.equals(this.playerInId, gameEvents.playerInId) &&
        Objects.equals(this.type, gameEvents.type) &&
        Objects.equals(this.gameEventId, gameEvents.gameEventId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(clubId, date, description, gameId, minute, playerAssistId, playerId, playerInId, type, gameEventId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GameEvents {\n");
    sb.append("    clubId: ").append(toIndentedString(clubId)).append("\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    gameId: ").append(toIndentedString(gameId)).append("\n");
    sb.append("    minute: ").append(toIndentedString(minute)).append("\n");
    sb.append("    playerAssistId: ").append(toIndentedString(playerAssistId)).append("\n");
    sb.append("    playerId: ").append(toIndentedString(playerId)).append("\n");
    sb.append("    playerInId: ").append(toIndentedString(playerInId)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    gameEventId: ").append(toIndentedString(gameEventId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("club_id");
    openapiFields.add("date");
    openapiFields.add("description");
    openapiFields.add("game_id");
    openapiFields.add("minute");
    openapiFields.add("player_assist_id");
    openapiFields.add("player_id");
    openapiFields.add("player_in_id");
    openapiFields.add("type");
    openapiFields.add("game_event_id");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to GameEvents
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (GameEvents.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in GameEvents is not found in the empty JSON string", GameEvents.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!GameEvents.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GameEvents` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) && !jsonObj.get("type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("type").toString()));
      }
      if ((jsonObj.get("game_event_id") != null && !jsonObj.get("game_event_id").isJsonNull()) && !jsonObj.get("game_event_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `game_event_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("game_event_id").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GameEvents.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GameEvents' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GameEvents> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GameEvents.class));

       return (TypeAdapter<T>) new TypeAdapter<GameEvents>() {
           @Override
           public void write(JsonWriter out, GameEvents value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GameEvents read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of GameEvents given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of GameEvents
  * @throws IOException if the JSON string is invalid with respect to GameEvents
  */
  public static GameEvents fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GameEvents.class);
  }

 /**
  * Convert an instance of GameEvents to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

